'use strict';

goog.provide('Blockly.Msg.zh.han');

goog.require('Blockly.Msg');


Blockly.Msg.MICROBIT_ACCELEROMETER_GET_X_MESSAGE0 = '加速度传感器 X 轴';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_X_TOOLTIP = '取得加速度传感器的 X 轴值.';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_X_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/accelerometer.html#microbit.accelerometer.get_x';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_Y_MESSAGE0 = '加速度传感器 Y 轴';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_Y_TOOLTIP = '取得加速度传感器的 Y 轴值.';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_Y_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/accelerometer.html#microbit.accelerometer.get_y';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_Z_MESSAGE0 = '加速传感器 Z 轴';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_Z_TOOLTIP = '取得加速度传感器的 Z 轴值.';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_Z_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/accelerometer.html#microbit.accelerometer.get_z';
Blockly.Msg.MICROBIT_ACCELEROMETER_WAS_GESTURE_MESSAGE0 = '发生过手势 %1';
Blockly.Msg.MICROBIT_ACCELEROMETER_WAS_GESTURE_TOOLTIP = '判断是否有选择到的手势, 如果有选择到的手势被发现就传回True, 否则为False.';
Blockly.Msg.MICROBIT_ACCELEROMETER_WAS_GESTURE_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/accelerometer.html#microbit.accelerometer.was_gesture';
Blockly.Msg.MICROBIT_ACCELEROMETER_IS_GESTURE_MESSAGE0 = '判断目前的手势是 %1';
Blockly.Msg.MICROBIT_ACCELEROMETER_IS_GESTURE_TOOLTIP = '如果目前的手势是选择的手势, 传回True, 否则为False.';
Blockly.Msg.MICROBIT_ACCELEROMETER_IS_GESTURE_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/accelerometer.html#microbit.accelerometer.is_gesture';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_GESTURES_MESSAGE0 = '获取手势';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_GESTURES_TOOLTIP = '传回手势的历史记录, 最近的手势在最后, 同时清除手势的历史记录.';
Blockly.Msg.MICROBIT_ACCELEROMETER_GET_GESTURES_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/accelerometer.html#microbit.accelerometer.get_gestures';
Blockly.Msg.MICROBIT_ACCELEROMETER_CURRENT_GESTURE_MESSAGE0 = '目前的手势名称';
Blockly.Msg.MICROBIT_ACCELEROMETER_CURRENT_GESTURE_TOOLTIP = '传回目前的手势名称.';
Blockly.Msg.MICROBIT_ACCELEROMETER_CURRENT_GESTURE_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/accelerometer.html#microbit.accelerometer.current_gesture';
Blockly.Msg.MICROBIT_BUTTON_IS_PRESSED_MESSAGE0 = '按钮 %1 被按下';
Blockly.Msg.MICROBIT_BUTTON_IS_PRESSED_TOOLTIP = '如果选择按钮被按下传回 True. 否则, 传回 False.';
Blockly.Msg.MICROBIT_BUTTON_IS_PRESSED_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/button.html#Button.is_pressed';
Blockly.Msg.MICROBIT_BUTTON_WAS_PRESSED_MESSAGE0 = '按钮 %1 曾经被按下过';
Blockly.Msg.MICROBIT_BUTTON_WAS_PRESSED_TOOLTIP = '如果选择按钮在开发板执行后或最后检查曾经被按下传回 True, 否则传回 False.';
Blockly.Msg.MICROBIT_BUTTON_WAS_PRESSED_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/button.html#Button.was_pressed';
Blockly.Msg.MICROBIT_BUTTON_GET_PRESSES_MESSAGE0 = '传回按钮 %1 的按下次数';
Blockly.Msg.MICROBIT_BUTTON_GET_PRESSES_TOOLTIP = '传回选择按钮全部的按下次数, 并且重设为 0 次.';
Blockly.Msg.MICROBIT_BUTTON_GET_PRESSES_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/button.html#Button.get_presses';
Blockly.Msg.MICROBIT_COMPASS_CALIBRATE_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/compass.html#microbit.compass.calibrate';
Blockly.Msg.MICROBIT_COMPASS_CALIBRATE_MESSAGE0 = '校准指南针';
Blockly.Msg.MICROBIT_COMPASS_CALIBRATE_TOOLTIP = '开始校准指南针程序来增进指南针的精确度.';
Blockly.Msg.MICROBIT_COMPASS_IS_CALIBRATED_MESSAGE0 = '指南针已经校准?';
Blockly.Msg.MICROBIT_COMPASS_IS_CALIBRATED_TOOLTIP = '如果已经校准传回 True , 否则传回 False.';
Blockly.Msg.MICROBIT_COMPASS_IS_CALIBRATED_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/compass.html#microbit.compass.is_calibrated';
Blockly.Msg.MICROBIT_COMPASS_HEADING_MESSAGE0 = '指南针的方向';
Blockly.Msg.MICROBIT_COMPASS_HEADING_TOOLTIP = '传回指南针的方向是 0 到 360 度, 单位是角度, 顺时针向北是 0度.';
Blockly.Msg.MICROBIT_COMPASS_HEADING_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/compass.html#microbit.compass.heading';
Blockly.Msg.MICROBIT_COMPASS_GET_FIELD_STRENGTH_MESSAGE0 = '磁场強度值';
Blockly.Msg.MICROBIT_COMPASS_GET_FIELD_STRENGTH_TOOLTIP = '传回开发板附近磁场大小的数值.';
Blockly.Msg.MICROBIT_COMPASS_GET_FIELD_STRENGTH_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/compass.html#microbit.compass.get_field_strength';
Blockly.Msg.MICROBIT_DISPLAY_GET_PIXEL_MESSAGE0 = '取得亮度 位置 X %1 , Y %2';
Blockly.Msg.MICROBIT_DISPLAY_GET_PIXEL_TOOLTIP = '取得位置 X 列和 Y 行的 LED 亮度, 传回值 0 (off) 到 9 (brightest).';
Blockly.Msg.MICROBIT_DISPLAY_GET_PIXEL_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/display.html#microbit.display.get_pixel';
Blockly.Msg.MICROBIT_DISPLAY_SET_PIXEL_MESSAGE0 = '设定位置 X %1,  Y %2 显示的亮度 %3';
Blockly.Msg.MICROBIT_DISPLAY_SET_PIXEL_TOOLTIP = '设定位置 X 列和 Y 行的 LED 亮度, 值是 0 (off) 到 9 (brightest).';
Blockly.Msg.MICROBIT_DISPLAY_SET_PIXEL_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/display.html#microbit.display.set_pixel';
Blockly.Msg.MICROBIT_DISPLAY_CLEAR_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/display.html#microbit.display.clear';
Blockly.Msg.MICROBIT_DISPLAY_CLEAR_MESSAGE0 = '清除显示';
Blockly.Msg.MICROBIT_DISPLAY_CLEAR_TOOLTIP = '清除显示 - 设定所有 LED 的亮度是 0 (off).';
Blockly.Msg.MICROBIT_DISPLAY_SHOW_IMAGE_MESSAGE0 = '显示图像 %1';
Blockly.Msg.MICROBIT_DISPLAY_SHOW_IMAGE_TOOLTIP = '在 LED 矩阵显示参数的图像.';
Blockly.Msg.MICROBIT_DISPLAY_SHOW_IMAGE_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/display.html#microbit.display.show';
Blockly.Msg.MICROBIT_DISPLAY_SHOW_MESSAGE0 = '显示文字 %1';
Blockly.Msg.MICROBIT_DISPLAY_SHOW_MESSAGE_TOOLTIP = '在 LED 矩阵显示参数的文字內容.';
Blockly.Msg.MICROBIT_DISPLAY_SHOW_MESSAGE_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/display.html#microbit.display.show';
Blockly.Msg.MICROBIT_DISPLAY_SHOW_ANIMATION_MESSAGE0 = '显示动画 %1 清单播放的延迟時间 %2 间隔毫秒. %3 等待 %4 %5 循环 %6 %7 清除 %8';
Blockly.Msg.MICROBIT_DISPLAY_SHOW_ANIMATION_TOOLTIP = '显示一序列的图像來建立动画, 可以在指定间隔时间播放每一张图像. 如果需要可以指定等待多久再继续, 不停循环动画和结束清除显示.';
Blockly.Msg.MICROBIT_DISPLAY_SHOW_ANIMATION_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/display.html#microbit.display.show';
Blockly.Msg.MICROBIT_DISPLAY_SCROLL_MESSAGE0 = '显示滚动文字 %1';
Blockly.Msg.MICROBIT_DISPLAY_SCROLL_TOOLTIP = '在显示的LED矩阵滚动显示指定的文字內容.';
Blockly.Msg.MICROBIT_DISPLAY_SCROLL_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/display.html#microbit.display.scroll';
Blockly.Msg.MICROBIT_DISPLAY_ON_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/display.html#microbit.display.on';
Blockly.Msg.MICROBIT_DISPLAY_ON_MESSAGE0 = '开启显示';
Blockly.Msg.MICROBIT_DISPLAY_ON_TOOLTIP = '开启 micro:bit 开发板的显示.';
Blockly.Msg.MICROBIT_DISPLAY_OFF_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/display.html#microbit.display.off';
Blockly.Msg.MICROBIT_DISPLAY_OFF_MESSAGE0 = '开关显示';
Blockly.Msg.MICROBIT_DISPLAY_OFF_TOOLTIP = '开关 micro:bit 开发板的显示.';
Blockly.Msg.MICROBIT_DISPLAY_IS_ON_MESSAGE0 = '显示是开启?';
Blockly.Msg.MICROBIT_DISPLAY_IS_ON_TOOLTIP = '如果 micro:bit 的显示是开启传回 True, 否则传回 False.';
Blockly.Msg.MICROBIT_DISPLAY_IS_ON_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/display.html#microbit.display.is_on';
Blockly.Msg.MICROBIT_IMAGE_BUILTINS_MESSAGE0 = '內建图像 %1';
Blockly.Msg.MICROBIT_IMAGE_BUILTINS_TOOLTIP = '指定使用內建的图像.';
Blockly.Msg.MICROBIT_IMAGE_BUILTINS_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/image.html#attributes';
Blockly.Msg.MICROBIT_IMAGE_COPY_MESSAGE0 = '复制图像 %1';
Blockly.Msg.MICROBIT_IMAGE_COPY_TOOLTIP = '建立參数图像的拷贝.';
Blockly.Msg.MICROBIT_IMAGE_COPY_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/image.html#microbit.Image.copy';
Blockly.Msg.MICROBIT_IMAGE_INVERT_MESSAGE0 = '反转图像 %1';
Blockly.Msg.MICROBIT_IMAGE_INVERT_TOOLTIP = '将指定图像建立成一個反转亮度的新图像.';
Blockly.Msg.MICROBIT_IMAGE_INVERT_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/image.html#microbit.Image.invert';
Blockly.Msg.MICROBIT_IMAGE_CREATE_MESSAGE0 = '建立图像 %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17 %18 %19 %20 %21 %22 %23 %24 %25 %26 %27 %28 %29 %30';
Blockly.Msg.MICROBIT_IMAGE_CREATE_TOOLTIP = '建立一個新图像.';
Blockly.Msg.MICROBIT_IMAGE_CREATE_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/image.html#microbit.Image';
Blockly.Msg.MICROBIT_MICROBIT_PANIC_MESSAGE0 = '错误状态码 %1';
Blockly.Msg.MICROBIT_MICROBIT_PANIC_TOOLTIP = '进入错误状态来提示有些问题, 需要重新启动和传回状态码的数值.';
Blockly.Msg.MICROBIT_MICROBIT_PANIC_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/microbit.html#microbit.panic';
Blockly.Msg.MICROBIT_MICROBIT_RESET_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/microbit.html#microbit.reset';
Blockly.Msg.MICROBIT_MICROBIT_RESET_MESSAGE0 = '复位 Micro:bit';
Blockly.Msg.MICROBIT_MICROBIT_RESET_TOOLTIP = '重启 micro:bit 开发板';
Blockly.Msg.MICROBIT_MICROBIT_SLEEP_MESSAGE0 = '暂停 %1 毫秒';
Blockly.Msg.MICROBIT_MICROBIT_SLEEP_TOOLTIP = '等待指定時间的毫秒(milliseconds)后执行下一个指令.';
Blockly.Msg.MICROBIT_MICROBIT_SLEEP_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/microbit.html#microbit.sleep';
Blockly.Msg.MICROBIT_MICROBIT_RUNNING_TIME_MESSAGE0 = 'Micro:bit 执行的持续時间';
Blockly.Msg.MICROBIT_MICROBIT_RUNNING_TIME_TOOLTIP = '取得开发板重新启动执行的持续时间, 单位是毫秒(milliseconds).';
Blockly.Msg.MICROBIT_MICROBIT_RUNNING_TIME_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/microbit.html#microbit.running_time';
Blockly.Msg.MICROBIT_MICROBIT_TEMPERATURE_MESSAGE0 = 'Micro:bit 的温度';
Blockly.Msg.MICROBIT_MICROBIT_TEMPERATURE_TOOLTIP = '取得 micro:bit 开发板的温度, 单位是摄氏(Celcius).';
Blockly.Msg.MICROBIT_MICROBIT_TEMPERATURE_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/microbit.html#microbit.temperature';
Blockly.Msg.MICROBIT_MUSIC_PLAY_BUILT_IN_MESSAGE0 = '播放內建旋律 %1 %2 等待 %3 %4 循环 %5';
Blockly.Msg.MICROBIT_MUSIC_PLAY_BUILT_IN_TOOLTIP = '播放指定的內建旋律. 如果需要可以指定等待后再继续, 或是不停循环的播放旋律.';
Blockly.Msg.MICROBIT_MUSIC_PLAY_BUILT_IN_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/music.html#built-in-melodies';
Blockly.Msg.MICROBIT_MUSIC_PITCH_MESSAGE0 = '播放音高 %1 %2 持续  %3 毫秒';
Blockly.Msg.MICROBIT_MUSIC_PITCH_TOOLTIP = '播放音高持续一段循环的時间, 单位是毫秒(milliseconds).';
Blockly.Msg.MICROBIT_MUSIC_PITCH_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/music.html#music.pitch';
Blockly.Msg.MICROBIT_MUSIC_PLAY_LIST_OF_NOTES_MESSAGE0 = '播放音符清单 %1 等待 %2 %3 循环 %4';
Blockly.Msg.MICROBIT_MUSIC_PLAY_LIST_OF_NOTES_TOOLTIP = '播放音符清单所代表的音乐. 如果需要可以指定等待后再继续, 或不停循环的播放旋律.';
Blockly.Msg.MICROBIT_MUSIC_PLAY_LIST_OF_NOTES_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/music.html#musical-notation';
Blockly.Msg.MICROBIT_MUSIC_RESET_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/music.html#music.reset';
Blockly.Msg.MICROBIT_MUSIC_RESET_MESSAGE0 = '恢复音乐设置';
Blockly.Msg.MICROBIT_MUSIC_RESET_TOOLTIP = '恢复所有音乐的相关設定 (目前的速度, 八度和持续时间) 成为预设值.';
Blockly.Msg.MICROBIT_MUSIC_STOP_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/music.html#music.stop';
Blockly.Msg.MICROBIT_MUSIC_STOP_MESSAGE0 = '停止播放音乐';
Blockly.Msg.MICROBIT_MUSIC_STOP_TOOLTIP = '停止所有音乐的播放.';
Blockly.Msg.MICROBIT_MUSIC_SET_TEMPO_MESSAGE0 = '指定播放速度是 1 节拍等于 %1 TICK, 每分钟有 %2 节拍';
Blockly.Msg.MICROBIT_MUSIC_SET_TEMPO_TOOLTIP = '指定播放速度. 多少 TICK 代表 1 节拍, 每一分钟有几拍(BPM).';
Blockly.Msg.MICROBIT_MUSIC_SET_TEMPO_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/music.html#music.set_tempo';
Blockly.Msg.MICROBIT_MUSIC_RESET_TEMPO_MESSAGE0 = '重新设置播放速度为预设值';
Blockly.Msg.MICROBIT_MUSIC_RESET_TEMPO_TOOLTIP = '重新设置播放速度为预设值: 4 TICK 120 BPM.';
Blockly.Msg.MICROBIT_MUSIC_RESET_TEMPO_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/music.html#music.set_tempo';
Blockly.Msg.MICROBIT_MUSIC_GET_TEMPO_MESSAGE0 = '目前的播放速度';
Blockly.Msg.MICROBIT_MUSIC_GET_TEMPO_TOOLTIP = '取得目前播放速度的2個值: 每一节拍有几 Ticks, 和每一分钟有几拍(BPM).';
Blockly.Msg.MICROBIT_MUSIC_GET_TEMPO_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/music.html#music.get_tempo';
Blockly.Msg.MICROBIT_NEOPIXEL_INITIALISE_MESSAGE0 = '初始 %1 Neopixel[s] %2 在引脚 %3';
Blockly.Msg.MICROBIT_NEOPIXEL_INITIALISE_TOOLTIP = '建立一个物件来控制连接的 Neopixels. 指定有几个 Neopixels 和连接的引脚.';
Blockly.Msg.MICROBIT_NEOPIXEL_INITIALISE_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/neopixel.html#neopixel.NeoPixel';
Blockly.Msg.MICROBIT_NEOPIXEL_CLEAR_MESSAGE0 = '清除 Neopixels 在 %1';
Blockly.Msg.MICROBIT_NEOPIXEL_CLEAR_TOOLTIP = '清除所有 neopixel 物件控制的 Neopixels.';
Blockly.Msg.MICROBIT_NEOPIXEL_CLEAR_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/neopixel.html#neopixel.NeoPixel.clear';
Blockly.Msg.MICROBIT_NEOPIXEL_SHOW_MESSAGE0 = '显示 Neopixels 在 %1';
Blockly.Msg.MICROBIT_NEOPIXEL_SHOW_TOOLTIP = '显示 / 更新所有 neopixel 物件控制的 Neopixels.';
Blockly.Msg.MICROBIT_NEOPIXEL_SHOW_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/neopixel.html#neopixel.NeoPixel.show';
Blockly.Msg.MICROBIT_NEOPIXEL_SET_MESSAGE0 = '使用 Neopixels 在 %1 指定像素在位置 %2 红 %3 绿 %4 蓝 %5';
Blockly.Msg.MICROBIT_NEOPIXEL_SET_TOOLTIP = '使用 Neopixel 物件来更新指定位置的 RGB 值.';
Blockly.Msg.MICROBIT_NEOPIXEL_SET_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/neopixel.html#using-neopixels';
Blockly.Msg.MICROBIT_PIN_TOUCHED_MESSAGE0 = '引脚 %1 被触摸?';
Blockly.Msg.MICROBIT_PIN_TOUCHED_TOOLTIP = '如果指定引脚被触摸传回 True.';
Blockly.Msg.MICROBIT_PIN_TOUCHED_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/pin.html#microbit.MicroBitTouchPin.is_touched';
Blockly.Msg.MICROBIT_PIN_READ_ANALOG_MESSAGE0 = '模拟输入 在引脚 %1';
Blockly.Msg.MICROBIT_PIN_READ_ANALOG_TOOLTIP = '在指定引脚读取模拟值.';
Blockly.Msg.MICROBIT_PIN_READ_ANALOG_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/pin.html#microbit.MicroBitAnalogDigitalPin.read_analog';
Blockly.Msg.MICROBIT_PIN_WRITE_ANALOG_MESSAGE0 = '模拟输出 值 %1 在引脚 %2';
Blockly.Msg.MICROBIT_PIN_WRITE_ANALOG_TOOLTIP = '在指定接脚写入模拟值.';
Blockly.Msg.MICROBIT_PIN_WRITE_ANALOG_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/pin.html#microbit.MicroBitAnalogDigitalPin.write_analog';
Blockly.Msg.MICROBIT_PIN_READ_DIGITAL_MESSAGE0 = '数字输入 在引脚 %1';
Blockly.Msg.MICROBIT_PIN_READ_DIGITAL_TOOLTIP = '在指定引脚读取数字值 (True 或 False).';
Blockly.Msg.MICROBIT_PIN_READ_DIGITAL_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/pin.html#microbit.MicroBitDigitalPin.read_digital';
Blockly.Msg.MICROBIT_PIN_WRITE_DIGITAL_MESSAGE0 = '数字输出 值 %1 在引脚 %2';
Blockly.Msg.MICROBIT_PIN_WRITE_DIGITAL_TOOLTIP = '在指定引脚输出数字值 (True 或 False).';
Blockly.Msg.MICROBIT_PIN_WRITE_DIGITAL_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/pin.html#microbit.MicroBitDigitalPin.write_digital';
Blockly.Msg.MICROBIT_RADIO_ON_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/radio.html#radio.on';
Blockly.Msg.MICROBIT_RADIO_ON_MESSAGE0 = '开启无线电';
Blockly.Msg.MICROBIT_RADIO_ON_TOOLTIP = '开启无线电. 因为需要額外电力和占用内存, 请在真正需要时才开启.';
Blockly.Msg.MICROBIT_RADIO_OFF_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/radio.html#radio.off';
Blockly.Msg.MICROBIT_RADIO_OFF_MESSAGE0 = '关闭无线电';
Blockly.Msg.MICROBIT_RADIO_OFF_TOOLTIP = '关闭无线电来节省电力和内存.';
Blockly.Msg.MICROBIT_RADIO_CONFIG_MESSAGE0 = '设置无线电: 消息长度 %1 %2 最大队列数量 %3 %4 使用频道 %5 %6 广播功率 %7 %8 数据速率 %9';
Blockly.Msg.MICROBIT_RADIO_CONFIG_TOOLTIP = '设置无线电每一個消息的最大长度, 可储存的最大队列收到的消息数, 使用的频道, 功率和传输速度.';
Blockly.Msg.MICROBIT_RADIO_CONFIG_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/radio.html#radio.config';
Blockly.Msg.MICROBIT_RADIO_RESET_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/radio.html#radio.reset';
Blockly.Msg.MICROBIT_RADIO_RESET_MESSAGE0 = '复位无线电';
Blockly.Msg.MICROBIT_RADIO_RESET_TOOLTIP = '复位无线电成为预设值.';
Blockly.Msg.MICROBIT_RADIO_SEND_STRING_MESSAGE0 = '送出消息 %1';
Blockly.Msg.MICROBIT_RADIO_SEND_STRING_TOOLTIP = '广播一个文字消息.';
Blockly.Msg.MICROBIT_RADIO_SEND_STRING_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/radio.html#radio.send';
Blockly.Msg.MICROBIT_RADIO_RECEIVE_MESSAGE0 = '接收消息';
Blockly.Msg.MICROBIT_RADIO_RECEIVE_TOOLTIP = '接收一个消息.';
Blockly.Msg.MICROBIT_RADIO_RECEIVE_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/radio.html#radio.receive';
Blockly.Msg.MICROBIT_SPEECH_SAY_MESSAGE0 = '说话 %1';
Blockly.Msg.MICROBIT_SPEECH_SAY_TOOLTIP = '尝试使用英文来说明输入的內容.';
Blockly.Msg.MICROBIT_SPEECH_SAY_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/speech.html#speech.say';
Blockly.Msg.MICROBIT_SPEECH_PRONOUNCE_MESSAGE0 = '发音 %1';
Blockly.Msg.MICROBIT_SPEECH_PRONOUNCE_TOOLTIP = '精准发音输入的音位(Phoneme).';
Blockly.Msg.MICROBIT_SPEECH_PRONOUNCE_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/speech.html#phonemes';
Blockly.Msg.MICROBIT_SPEECH_SING_MESSAGE0 = '唱歌 %1';
Blockly.Msg.MICROBIT_SPEECH_SING_TOOLTIP = '模仿机器人唱出音位(Phoneme).';
Blockly.Msg.MICROBIT_SPEECH_SING_HELPURL = 'https://microbit-micropython.readthedocs.io/en/latest/speech.html#singing';
